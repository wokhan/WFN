<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Wokhan.WindowsFirewallNotifier.Console.UI.Pages" 
      xmlns:settings="clr-namespace:Wokhan.WindowsFirewallNotifier.Common;assembly=Wokhan.WindowsFirewallNotifier.Common"
      xmlns:resx="clr-namespace:Wokhan.WindowsFirewallNotifier.Common.Properties;assembly=Wokhan.WindowsFirewallNotifier.Common" 
      x:Class="Wokhan.WindowsFirewallNotifier.Console.UI.Pages.Status" 
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="600"
      Title="Status" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
    <DockPanel>
        <Border Background="#FFFF7B7B" Style="{StaticResource NonAdminPanel}">
            <WrapPanel>
                <Label Content="Only an administrator can use this feature." />
                <Button x:Name="btnRestartAdmin" Click="btnRestartAdmin_Click">
                    <Grid>
                        <Path Height="16" HorizontalAlignment="Left" Stretch="Uniform" Fill="#FF5353F7" Data="{StaticResource Image_Shield}" />
                        <Label Margin="20,0,0,0" Padding="0" Content="restart as admin" />
                    </Grid>
                </Button>
            </WrapPanel>
        </Border>
        <Border Style="{StaticResource ToolBarPanel}">
            <WrapPanel HorizontalAlignment="Left">
                <Button x:Name="btnSave" Click="btnSave_Click" IsEnabled="{Binding IsElevated, Source={x:Static Application.Current}}">
                    <Grid>
                        <Path HorizontalAlignment="Left" Height="14" Stretch="Uniform" Fill="#FF6C6CD4" Data="{StaticResource Image_Shield}" />
                        <Label Margin="20,0,0,0" Content="Apply" VerticalAlignment="Bottom" />
                    </Grid>
                </Button>
                <Button x:Name="btnRevert" Click="btnRevert_Click">
                    <Grid>
                        <Path HorizontalAlignment="Left" Height="14" Stretch="Uniform" Fill="Red" Data="{StaticResource Image_Refresh}" />
                        <Label Margin="20,0,0,0" Content="Reload" />
                    </Grid>
                </Button>
            </WrapPanel>
        </Border>
        <Border x:Name="messsageInfoPanel" Padding="10" DockPanel.Dock="Top">
            <Border.Style>
                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource InfoPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LastMessage}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <TextBlock Text="{Binding LastMessage}" />
            </Grid>
        </Border>
        <StackPanel x:Name="stackOptions">
            <TextBlock Margin="5" TextWrapping="Wrap" Text="{x:Static resx:Resources.Status_Heading1 }" />
            <WrapPanel>
                <Label FontWeight="Bold" Content="Current profile: "/>
                <Label Content="{Binding CurrentProfile, FallbackValue=Unknown}" />
            </WrapPanel>
            <TextBlock Margin="5" TextWrapping="Wrap" FontStyle="Italic" Text="{x:Static resx:Resources.Status_NoteAboutProfiles}" />
            <Grid IsEnabled="{Binding IsElevated, Source={x:Static Application.Current}}">
                <Grid.Style>
                    <Style>
                        <Style.Resources>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleSwitch}">
                                <Setter Property="Content" Value="Disabled" />
                                <Setter Property="Padding" Value="10,5" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="Enabled" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource RadioButtonSlide}">
                                <Setter Property="Margin" Value="5,0" />
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="BorderBrush" Value="Gray" />
                                        <Setter Property="Foreground" Value="Gray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Style.Resources>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!-- -->
                <Rectangle Grid.Column="1" Grid.Row="0" Grid.RowSpan="10" Fill="Lavender" />
                <Rectangle Grid.Column="2" Grid.Row="0" Grid.RowSpan="10" Fill="#FFC5FFC5" />
                <Rectangle Grid.Column="3" Grid.Row="0" Grid.RowSpan="10" Fill="#FFC1F4FF" />
                <!-- -->
                <Label Grid.Column="1" HorizontalContentAlignment="Center" FontWeight="Bold" Content="Private" />
                <Label Grid.Column="2" HorizontalContentAlignment="Center" FontWeight="Bold" Content="Public" />
                <Label Grid.Column="3" HorizontalContentAlignment="Center" FontWeight="Bold" Content="Domain" />
                <Label Grid.Column="4" HorizontalContentAlignment="Center" FontWeight="Bold" Content="All" />
                <!-- -->
                <Label Grid.Row="1" Grid.ColumnSpan="4" FontWeight="Bold" Content="{x:Static resx:Resources.Status_WindowsFirewallGlobalStatus}" Background="{DynamicResource AccentColorBrush}" />
                <!-- -->
                <ToggleButton Padding="5" Grid.Row="2" Grid.Column="1" IsChecked="{Binding PrivateIsEnabled}" />
                <ToggleButton Grid.Row="2" Grid.Column="2" IsChecked="{Binding PublicIsEnabled}" />
                <ToggleButton Grid.Row="2" Grid.Column="3" IsChecked="{Binding DomainIsEnabled}" />
                <ToggleButton Grid.Row="2" Grid.Column="4" IsChecked="{Binding AllIsEnabled}" />

                <!-- -->
                <Label Grid.Row="4" FontWeight="Bold" Grid.ColumnSpan="4" Content="{x:Static resx:Resources.Status_DefaultActionsWhenNoFilteringRuleMatches}" Background="{DynamicResource AccentColorBrush}" />
                <!-- -->
                <Label Grid.Row="5" Content="Inbound" FontWeight="Bold" />
                <StackPanel Grid.Row="5" Grid.Column="1" IsEnabled="{Binding PrivateIsEnabled}">
                    <RadioButton GroupName="rdbInPrv" Padding="0,0,0,10" IsChecked="{Binding PrivateIsInAllowed}" Content="Allow" Tag="IsFirst" />
                    <RadioButton GroupName="rdbInPrv" IsChecked="{Binding PrivateIsInBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbInPrv" Padding="0,10,0,0" IsChecked="{Binding PrivateIsInBlockedNotif}" Tag="IsLast"  Content="Block and prompt" />
                </StackPanel>
                <StackPanel Grid.Row="5" Grid.Column="2" IsEnabled="{Binding PublicIsEnabled}">
                    <RadioButton GroupName="rdbInPub" Padding="0,0,0,10" IsChecked="{Binding PublicIsInAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbInPub" IsChecked="{Binding PublicIsInBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbInPub" Padding="0,10,0,0" IsChecked="{Binding PublicIsInBlockedNotif}" Content="Block and prompt" />
                </StackPanel>
                <StackPanel Grid.Row="5" Grid.Column="3" IsEnabled="{Binding DomainIsEnabled}">
                    <RadioButton GroupName="rdbInDom" Padding="0,0,0,10" IsChecked="{Binding DomainIsInAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbInDom" IsChecked="{Binding DomainIsInBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbInDom" Padding="0,10,0,0" IsChecked="{Binding DomainIsInBlockedNotif}" Content="Block and prompt" />
                </StackPanel>
                <StackPanel Grid.Row="5" Grid.Column="4">
                    <RadioButton GroupName="rdbInAll" Padding="0,0,0,10" IsChecked="{Binding AllIsInAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbInAll" IsChecked="{Binding AllIsInBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbInAll" Padding="0,10,0,0" IsChecked="{Binding AllIsInBlockedNotif}" Content="Block and prompt" />
                </StackPanel>
                <Label Grid.Row="6" Content="Outbound" FontWeight="Bold" />
                <StackPanel Grid.Row="6" Grid.Column="1" IsEnabled="{Binding PrivateIsEnabled}">
                    <RadioButton GroupName="rdbOutPrv" Padding="0,0,0,10" IsChecked="{Binding PrivateIsOutAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbOutPrv" IsChecked="{Binding PrivateIsOutBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbOutPrv" Padding="0,10,0,0" IsChecked="{Binding PrivateIsOutBlockedNotif}" Content="Block and prompt*" />
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="2" IsEnabled="{Binding PublicIsEnabled}">
                    <RadioButton GroupName="rdbOutPub" Padding="0,0,0,10" IsChecked="{Binding PublicIsOutAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbOutPub" IsChecked="{Binding PublicIsOutBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbOutPub" Padding="0,10,0,0" IsChecked="{Binding PublicIsOutBlockedNotif}" Content="Block and prompt*" />
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="3" IsEnabled="{Binding DomainIsEnabled}">
                    <RadioButton GroupName="rdbOutDom" Padding="0,0,0,10" IsChecked="{Binding DomainIsOutAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbOutDom" IsChecked="{Binding DomainIsOutBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbOutDom" Padding="0,10,0,0" IsChecked="{Binding DomainIsOutBlockedNotif}" Content="Block and prompt*" />
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="4">
                    <RadioButton GroupName="rdbOutAll" Padding="0,0,0,10" IsChecked="{Binding AllIsOutAllowed}" Content="Allow" />
                    <RadioButton GroupName="rdbOutAll" IsChecked="{Binding AllIsOutBlocked}" Content="Block silently" />
                    <RadioButton GroupName="rdbOutAll" Padding="0,10,0,0" IsChecked="{Binding AllIsOutBlockedNotif}" Content="Block and prompt*" />
                </StackPanel>
            </Grid>
            <TextBlock Margin="10,0" FontStyle="Italic" TextWrapping="Wrap" Text="{x:Static resx:Resources.Status_FooterRemark}" />
            <StackPanel Margin="10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <ToggleButton x:Name="tgStartNotifier" Style="{StaticResource ToggleSwitch}" Padding="3,0,3,0" Content="Start notifier after windows login" ToolTip="" IsChecked="{Binding StartNotifierAfterLogin, Source={x:Static settings:Settings.Default}}" Width="290" ScrollViewer.CanContentScroll="True" />
                    <Button Style="{StaticResource RoundedButton}" Padding="0" x:Name="btnTestNotif" Click="btnTestNotif_Click" HorizontalAlignment="Right" Margin="0,0,0,0" BorderBrush="{DynamicResource AccentColorBrush}" FontWeight="Bold" FontStyle="Normal" Background="#00000000" >
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Wokhan.WindowsFirewallNotifier.Common;component/Resources/Notifier.ico" Height="20" Margin="3,0,0,0"/>
                            <Label Content="Start Notifier now" Padding="0" Margin="5" FontWeight="Normal" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>
                </StackPanel>
                <ToggleButton Style="{StaticResource ToggleSwitch}" Margin="0,0,0,10" Padding="5,0" Content="Start notifier minimized" ToolTip="" IsChecked="{Binding StartNotifierMinimized, Source={x:Static settings:Settings.Default}}" />
            </StackPanel>
        </StackPanel>
    </DockPanel>
</Page>
