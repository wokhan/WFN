//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFirewallNotifierConsole.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WFNConsole.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WFN_update.txt.
        /// </summary>
        public static string FILENAME_UPDATE {
            get {
                return ResourceManager.GetString("FILENAME_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WFN_version.txt.
        /// </summary>
        public static string FILENAME_VERSION {
            get {
                return ResourceManager.GetString("FILENAME_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In/Out.
        /// </summary>
        public static string FW_DIR_BOTH {
            get {
                return ResourceManager.GetString("FW_DIR_BOTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In.
        /// </summary>
        public static string FW_DIR_IN {
            get {
                return ResourceManager.GetString("FW_DIR_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out.
        /// </summary>
        public static string FW_DIR_OUT {
            get {
                return ResourceManager.GetString("FW_DIR_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string FW_PROFILE_ALL {
            get {
                return ResourceManager.GetString("FW_PROFILE_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain.
        /// </summary>
        public static string FW_PROFILE_DOMAIN {
            get {
                return ResourceManager.GetString("FW_PROFILE_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private.
        /// </summary>
        public static string FW_PROFILE_PRIVATE {
            get {
                return ResourceManager.GetString("FW_PROFILE_PRIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public.
        /// </summary>
        public static string FW_PROFILE_PUBLIC {
            get {
                return ResourceManager.GetString("FW_PROFILE_PUBLIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow.
        /// </summary>
        public static string FW_RULE_ALLOW {
            get {
                return ResourceManager.GetString("FW_RULE_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block.
        /// </summary>
        public static string FW_RULE_BLOCK {
            get {
                return ResourceManager.GetString("FW_RULE_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon ICON_SHIELD {
            get {
                object obj = ResourceManager.GetObject("ICON_SHIELD", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow: a firewall rule will be created for the concerned application,
        ///except if you tick the checkbox below to allow it temporarily..
        /// </summary>
        public static string MSG_ALLOW {
            get {
                return ResourceManager.GetString("MSG_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore: adds the concerned application to the WFN exceptions list
        ///to prevent any further notification.
        ///You will be able to remove this exception through the WFN options screen..
        /// </summary>
        public static string MSG_BLOCK {
            get {
                return ResourceManager.GetString("MSG_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are going to disable Windows Firewall Notifier notifications (please note that this action does not remove already created firewall rules, nor does it prevent you to use the Windows Firewall Notifier console). You will be able to enable it back later through the Options tab.
        ///
        ///Would you like to continue?.
        /// </summary>
        public static string MSG_DISABLE_WFN {
            get {
                return ResourceManager.GetString("MSG_DISABLE_WFN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier - Error.
        /// </summary>
        public static string MSG_DLG_ERR_TITLE {
            get {
                return ResourceManager.GetString("MSG_DLG_ERR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier.
        /// </summary>
        public static string MSG_DLG_TITLE {
            get {
                return ResourceManager.GetString("MSG_DLG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to enable the Windows integrated firewall.\r\n
        ///Aborting installation..
        /// </summary>
        public static string MSG_INST_ENABLE_FW_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_ENABLE_FW_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while updating the local strategy policy.
        ///Aborting installation..
        /// </summary>
        public static string MSG_INST_ENABLE_LOG_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_ENABLE_LOG_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier notifications have been enabled..
        /// </summary>
        public static string MSG_INST_OK {
            get {
                return ResourceManager.GetString("MSG_INST_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while creating the Windows Firewall Notifier task.
        ///Aborting activation..
        /// </summary>
        public static string MSG_INST_TASK_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_TASK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The corresponding rule has been created..
        /// </summary>
        public static string MSG_RULE_CREATED {
            get {
                return ResourceManager.GetString("MSG_RULE_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are going to remove the selected firewall rule.
        ///Continue?.
        /// </summary>
        public static string MSG_RULE_DELETE {
            get {
                return ResourceManager.GetString("MSG_RULE_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The corresponding rule has not been created..
        /// </summary>
        public static string MSG_RULE_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The temporary rule could not be removed.
        ///The application outgoing connections are still allowed.
        ///Please check the Windows firewall for a rule named {0}..
        /// </summary>
        public static string MSG_RULE_RM_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_RM_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to temporary allow this application..
        /// </summary>
        public static string MSG_RULE_TMP_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_TMP_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier enabled the Windows firewall outgoing connections log (disabled by default).
        ///Do you want to disable it back?.
        /// </summary>
        public static string MSG_UNINST_DISABLE_LOG {
            get {
                return ResourceManager.GetString("MSG_UNINST_DISABLE_LOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while restoring the local strategy policy.
        /// </summary>
        public static string MSG_UNINST_DISABLE_LOG_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_DISABLE_LOG_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier has been successfully disabled.
        ///You can safely remove the application folder..
        /// </summary>
        public static string MSG_UNINST_OK {
            get {
                return ResourceManager.GetString("MSG_UNINST_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while removing the Windows Firewall Notifier task.
        ///This application has NOT been totally disabled..
        /// </summary>
        public static string MSG_UNINST_TASK_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_TASK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier - Disable (1/2).
        /// </summary>
        public static string MSG_UNINST_TITLE_1 {
            get {
                return ResourceManager.GetString("MSG_UNINST_TITLE_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier - Disable (2/2).
        /// </summary>
        public static string MSG_UNINST_TITLE_2 {
            get {
                return ResourceManager.GetString("MSG_UNINST_TITLE_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows embedded firewall is still configured to block outgoing connections.
        ///Do you want to restore the default settings, allowing them all?
        ///If not, all rules you created either manually or using this application will still be active..
        /// </summary>
        public static string MSG_UNINST_UNBLOCK {
            get {
                return ResourceManager.GetString("MSG_UNINST_UNBLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while restoring the default Windows firewall behavior..
        /// </summary>
        public static string MSG_UNINST_UNBLOCK_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_UNBLOCK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;
        ///&lt;Task version=&quot;1.2&quot; xmlns=&quot;http://schemas.microsoft.com/windows/2004/02/mit/task&quot;&gt;
        ///  &lt;RegistrationInfo&gt;
        ///    &lt;Date&gt;{2}&lt;/Date&gt;
        ///    &lt;Author&gt;Khan (http://wokhan.online.fr)&lt;/Author&gt;
        ///  &lt;/RegistrationInfo&gt;
        ///  &lt;Triggers&gt;
        ///    &lt;EventTrigger&gt;
        ///      &lt;StartBoundary&gt;{2}&lt;/StartBoundary&gt;
        ///      &lt;Enabled&gt;true&lt;/Enabled&gt;
        ///      &lt;Subscription&gt;&amp;lt;QueryList&amp;gt;&amp;lt;Query&amp;gt;&amp;lt;Select Path=&apos;Security&apos;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=5157)]] and *[EventData[Data[@Name=&apos;L [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WindowsFirewallNotifier {
            get {
                return ResourceManager.GetString("WindowsFirewallNotifier", resourceCulture);
            }
        }
    }
}
