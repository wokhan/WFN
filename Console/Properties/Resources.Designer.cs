//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18033
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFirewallNotifierConsole.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WindowsFirewallNotifierConsole.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WFN_update.txt.
        /// </summary>
        public static string FILENAME_UPDATE {
            get {
                return ResourceManager.GetString("FILENAME_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WFN_version.txt.
        /// </summary>
        public static string FILENAME_VERSION {
            get {
                return ResourceManager.GetString("FILENAME_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à In/Out.
        /// </summary>
        public static string FW_DIR_BOTH {
            get {
                return ResourceManager.GetString("FW_DIR_BOTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à In.
        /// </summary>
        public static string FW_DIR_IN {
            get {
                return ResourceManager.GetString("FW_DIR_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Out.
        /// </summary>
        public static string FW_DIR_OUT {
            get {
                return ResourceManager.GetString("FW_DIR_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à All.
        /// </summary>
        public static string FW_PROFILE_ALL {
            get {
                return ResourceManager.GetString("FW_PROFILE_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Domain.
        /// </summary>
        public static string FW_PROFILE_DOMAIN {
            get {
                return ResourceManager.GetString("FW_PROFILE_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Private.
        /// </summary>
        public static string FW_PROFILE_PRIVATE {
            get {
                return ResourceManager.GetString("FW_PROFILE_PRIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Public.
        /// </summary>
        public static string FW_PROFILE_PUBLIC {
            get {
                return ResourceManager.GetString("FW_PROFILE_PUBLIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow.
        /// </summary>
        public static string FW_RULE_ALLOW {
            get {
                return ResourceManager.GetString("FW_RULE_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Block.
        /// </summary>
        public static string FW_RULE_BLOCK {
            get {
                return ResourceManager.GetString("FW_RULE_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Icon semblable à (Icône).
        /// </summary>
        public static System.Drawing.Icon ICON_SHIELD {
            get {
                object obj = ResourceManager.GetObject("ICON_SHIELD", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow: a firewall rule will be created for the concerned application,
        ///except if you tick the checkbox below to allow it temporarily..
        /// </summary>
        public static string MSG_ALLOW {
            get {
                return ResourceManager.GetString("MSG_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ignore: adds the concerned application to the WFN exceptions list
        ///to prevent any further notification.
        ///You will be able to remove this exception through the WFN options screen..
        /// </summary>
        public static string MSG_BLOCK {
            get {
                return ResourceManager.GetString("MSG_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are going to disable Windows Firewall Notifier notifications (please note that this action does not remove already created firewall rules, nor does it prevent you to use the Windows Firewall Notifier console). You will be able to enable it back later through the Options tab.
        ///
        ///Would you like to continue?.
        /// </summary>
        public static string MSG_DISABLE_WFN {
            get {
                return ResourceManager.GetString("MSG_DISABLE_WFN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier - Error.
        /// </summary>
        public static string MSG_DLG_ERR_TITLE {
            get {
                return ResourceManager.GetString("MSG_DLG_ERR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier.
        /// </summary>
        public static string MSG_DLG_TITLE {
            get {
                return ResourceManager.GetString("MSG_DLG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to enable the Windows integrated firewall.\r\n
        ///Aborting installation..
        /// </summary>
        public static string MSG_INST_ENABLE_FW_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_ENABLE_FW_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occured while updating the local strategy policy.
        ///Aborting installation..
        /// </summary>
        public static string MSG_INST_ENABLE_LOG_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_ENABLE_LOG_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier notifications have been enabled..
        /// </summary>
        public static string MSG_INST_OK {
            get {
                return ResourceManager.GetString("MSG_INST_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occured while creating the Windows Firewall Notifier task.
        ///Aborting activation..
        /// </summary>
        public static string MSG_INST_TASK_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_TASK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The corresponding rule has been created..
        /// </summary>
        public static string MSG_RULE_CREATED {
            get {
                return ResourceManager.GetString("MSG_RULE_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are going to remove the selected firewall rule.
        ///Continue?.
        /// </summary>
        public static string MSG_RULE_DELETE {
            get {
                return ResourceManager.GetString("MSG_RULE_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The corresponding rule has not been created..
        /// </summary>
        public static string MSG_RULE_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The temporary rule could not be removed.
        ///The application outgoing connections are still allowed.
        ///Please check the Windows firewall for a rule named {0}..
        /// </summary>
        public static string MSG_RULE_RM_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_RM_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to temporary allow this application..
        /// </summary>
        public static string MSG_RULE_TMP_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_TMP_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier enabled the Windows firewall outgoing connections log (disabled by default).
        ///Do you want to disable it back?.
        /// </summary>
        public static string MSG_UNINST_DISABLE_LOG {
            get {
                return ResourceManager.GetString("MSG_UNINST_DISABLE_LOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occured while restoring the local strategy policy.
        /// </summary>
        public static string MSG_UNINST_DISABLE_LOG_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_DISABLE_LOG_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier has been successfully disabled.
        ///You can safely remove the application folder..
        /// </summary>
        public static string MSG_UNINST_OK {
            get {
                return ResourceManager.GetString("MSG_UNINST_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occured while removing the Windows Firewall Notifier task.
        ///This application has NOT been totally disabled..
        /// </summary>
        public static string MSG_UNINST_TASK_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_TASK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier - Disable (1/2).
        /// </summary>
        public static string MSG_UNINST_TITLE_1 {
            get {
                return ResourceManager.GetString("MSG_UNINST_TITLE_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows Firewall Notifier - Disable (2/2).
        /// </summary>
        public static string MSG_UNINST_TITLE_2 {
            get {
                return ResourceManager.GetString("MSG_UNINST_TITLE_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Windows embedded firewall is still configured to block outgoing connections.
        ///Do you want to restore the default settings, allowing them all?
        ///If not, all rules you created either manually or using this application will still be active..
        /// </summary>
        public static string MSG_UNINST_UNBLOCK {
            get {
                return ResourceManager.GetString("MSG_UNINST_UNBLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occured while restoring the default Windows firewall behavior..
        /// </summary>
        public static string MSG_UNINST_UNBLOCK_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_UNBLOCK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;
        ///&lt;Task version=&quot;1.2&quot; xmlns=&quot;http://schemas.microsoft.com/windows/2004/02/mit/task&quot;&gt;
        ///  &lt;RegistrationInfo&gt;
        ///    &lt;Date&gt;{2}&lt;/Date&gt;
        ///    &lt;Author&gt;Khan (http://wokhan.online.fr)&lt;/Author&gt;
        ///  &lt;/RegistrationInfo&gt;
        ///  &lt;Triggers&gt;
        ///    &lt;EventTrigger&gt;
        ///      &lt;StartBoundary&gt;{2}&lt;/StartBoundary&gt;
        ///      &lt;Enabled&gt;true&lt;/Enabled&gt;
        ///      &lt;Subscription&gt;&amp;lt;QueryList&amp;gt;&amp;lt;Query&amp;gt;&amp;lt;Select Path=&apos;Security&apos;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=5157)]] and *[EventData[Data[@Name=&apos;L [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string WindowsFirewallNotifier {
            get {
                return ResourceManager.GetString("WindowsFirewallNotifier", resourceCulture);
            }
        }
    }
}
