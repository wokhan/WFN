<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkToTray.Size" type="System.Drawing.Size, System.Drawing">
    <value>400, 17</value>
  </data>
  <data name="chkToTray.Text" xml:space="preserve">
    <value>Réduire la console près de l'horloge plutôt que dans la barre des tâches.</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>83, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Autres options</value>
  </data>
  <data name="lblNoBlockRule.Text" xml:space="preserve">
    <value>Cette option permet de continuer à bloquer les applications même si vous désactivez les notifications, en créant des règles dans le pare-feu Windows.</value>
  </data>
  <data name="chkNoBlockRule.Size" type="System.Drawing.Size, System.Drawing">
    <value>413, 24</value>
  </data>
  <data name="chkNoBlockRule.Text" xml:space="preserve">
    <value>Créer une règle bloquante au lieu d'utiliser une liste d'exceptions</value>
  </data>
  <data name="chkOEnableServiceDetection.Text" xml:space="preserve">
    <value>Activer la détection des services</value>
  </data>
  <data name="chkAnimate.Text" xml:space="preserve">
    <value>Animer les notifications</value>
  </data>
  <data name="rbDisable.Text" xml:space="preserve">
    <value>Ne pas activer les notifications
Vous pourrez toujours utiliser la console de Windows Firewall Notifier, mais aucune notification ne sera afficher et les connexions sortantes ne seront pas filtrées.
Veuillez noter que vous pourrez activer WFN plus tard via le panneau d'options de la console.</value>
  </data>
  <data name="ddlEnableFor.Items" xml:space="preserve">
    <value>Pour moi</value>
  </data>
  <data name="ddlEnableFor.Items1" xml:space="preserve">
    <value>Pour tous les utilisateurs</value>
  </data>
  <data name="rbEnable.Text" xml:space="preserve">
    <value>Activer les notifications</value>
  </data>
  <data name="lblInstDesc.Text" xml:space="preserve">
    <value>Windows Firewall Notifier étend le fonctionnement du pare-feu Windows intégré en affichant des notifications permettant aux utilisateurs de contrôler les connexions sortantes (par défaut, Windows les autorise toutes, ce qui signifie que n'importe quel programme de votre ordinateur peut envoyer des informations sur Internet sans votre consentement).

L'activation du filtrage des connexions sortantes nécessite de renforcer automatiquement certains paramètres de sécurité (ces paramètres pourront être restaurés lors de la désactivation de WFN).
Veuillez vous assurer d'avoir lu la documentation avant de continuer.</value>
  </data>
  <data name="btnOK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAHfSURBVFhHxZfNLwNBGIffbUlcHBxcXFwkLhJHiZOD
        i79q/wMpoUEQ8RGK+KhKbT98RUjjIyERVYmDg4MLIkIEP7Nl1/KOnVba6SZPspnZ5Hmm2046BKCiSAd1
        4t50Jfao0zqgDuvIbF87Rpt1jFYri5bkGZqtMzQlztGYPEdDMov6VA51gtr1HGrSOVSnL1AlngtapwjG
        TxCMHSEQ3UdgKYPAwi6M+R0Yc9swIpumMb1BxlSKB3zJUUY5hBxCDppM8IAyr9wrB01YJgvQKAeNW0L5
        K0CnnMbWeIBOOY3FeYBOOY2u8gCdchqJ8QCdchpe4QGllNuXn5yGovlHbNyAUsnf8ZbHT06DyzygFPI3
        vLj4yWlgiQeo5K94+lMeiB/m5734ySm8yANUK3/BQx628siWO+fFT07hBR6g+tifcevilXvHHVRy6p/n
        Aap3/oSbHxjRDBuzKUROfXM8QPWFe8S1kkLl1CsJ8JM77/wBV39SjJx6ZyUBCrnzU7vHJaNYOfVEJAEF
        yJ3t9Q4XLv+RU0gSUKjc2eFukf233AjNSAKKkKs2GZXc6J6WBGiUSwN0yuUBGuXygM9Dgxa5gP8tF3L7
        xKJDbuN6vwPEcUnIScjNcq5cQDYsoFJIB/UB+gCqeIAxnUvAigAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Windows Firewall Notifier - Paramètres</value>
  </data>
</root>