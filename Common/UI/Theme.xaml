<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ext="clr-namespace:Wokhan.UI.Xaml.Extensibility;assembly=Wokhan.UI">

    <Style TargetType="CheckBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                        <Border Margin="0,0,5,0" Height="14" Width="30" CornerRadius="7" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Ellipse Margin="1" Height="8" Width="8" Fill="{TemplateBinding Foreground}">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Opacity" Value="0.3" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                                <Setter Property="Opacity" Value="1" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="ext:CustomAdorner.CornerRadius" Value="4" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonOverBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="ext:CustomAdorner.CornerRadius" Value="4" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0 0 0 3" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonOverBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="ext:CustomAdorner.PreserveTemplate" Value="True" />
        <Setter Property="IsEditable" Value="False" />
        <!--<Setter Property="Background" Value="{DynamicResource ButtonBackground}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton ext:CustomAdorner.HeaderImage="{Binding Path=(ext:CustomAdorner.HeaderImage),RelativeSource={x:Static RelativeSource.TemplatedParent}}" ext:CustomAdorner.Header="{Binding Path=(ext:CustomAdorner.Header),RelativeSource={x:Static RelativeSource.TemplatedParent}}" Content="{Binding Text,RelativeSource={x:Static RelativeSource.TemplatedParent}}" ext:CustomAdorner.Image="{Binding Path=(ext:CustomAdorner.Image),RelativeSource={x:Static RelativeSource.TemplatedParent}}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <Popup x:Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" Placement="Bottom">
                            <Grid MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="4,0,4,4">
                                <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" CornerRadius="4">
                                    <Border.Effect>
                                        <DropShadowEffect Color="LightGray" ShadowDepth="2" />
                                    </Border.Effect>
                                </Border>
                                <Border CornerRadius="4">
                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="WindowBrushSaved" Color="{x:Static SystemColors.WindowColor}" />
    <SolidColorBrush x:Key="WindowTextBrushSaved" Color="{x:Static SystemColors.WindowTextColor}" />
    <SolidColorBrush x:Key="ActiveCaptionBrushSaved" Color="{x:Static SystemColors.ActiveCaptionColor}" />
    <SolidColorBrush x:Key="ScrollBarBrushSaved" Color="{x:Static SystemColors.ScrollBarColor}" />
    <SolidColorBrush x:Key="MenuBarBrushSaved" Color="{x:Static SystemColors.MenuBarColor}" />
    <SolidColorBrush x:Key="ControlTextBrushSaved" Color="{x:Static SystemColors.ControlTextColor}" />
    <SolidColorBrush x:Key="ControlBrushSaved" Color="{x:Static SystemColors.ControlColor}" />
    <SolidColorBrush x:Key="InfoBrushSaved" Color="{x:Static SystemColors.InfoColor}" />

</ResourceDictionary>