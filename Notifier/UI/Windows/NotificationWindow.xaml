<Window xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="Wokhan.WindowsFirewallNotifier.Notifier.UI.Windows.NotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:WFN="clr-namespace:Wokhan.WindowsFirewallNotifier.Common;assembly=Wokhan.WindowsFirewallNotifier.Common"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
        xmlns:sampleApp="clr-namespace:Wokhan.WindowsFirewallNotifier.Notifier"
        Title="Windows Firewall Notifier" ResizeMode="NoResize"
        AllowsTransparency="True"
        Background="Transparent"
        SizeToContent="Height"
        Width="425"
        WindowStyle="None" 
        Icon="/Notifier;component/Resources/Shield.ico" 
        Topmost="True"
        x:Name="NotifWindow" 
        WindowStartupLocation="Manual" 
        UseLayoutRounding="True"
        BorderThickness="0" 
        ScrollViewer.CanContentScroll="False"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <Storyboard x:Key="animate" BeginTime="0" Duration="0:0:1" SpeedRatio="2">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="250,0,0,0" To="0,0,0,0" />
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"/>
        </Storyboard>
        <WFN:Settings x:Key="WFN" />
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="30,30,30,30" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        </Style>
    </Window.Resources>
    <Border x:Name="Main" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="Gray">
        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <TextBlock Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Padding="75,5" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrush}}" FontWeight="Bold" Text="Windows firewall has blocked an outgoing connection" />
                <StackPanel Orientation="Horizontal">
                    <Button Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrush}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="2" Width="30" Height="30" Click="btnPrev_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource RoundedButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NbConnectionsBefore}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <WrapPanel>
                            <TextBlock Text="{Binding NbConnectionsBefore}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NbConnectionsBefore}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Path />
                        </WrapPanel>
                    </Button>
                    <Button Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrush}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="2" Width="30" Height="30" Click="btnNext_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource RoundedButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NbConnectionsAfter}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <WrapPanel>
                            <TextBlock Text="{Binding NbConnectionsAfter}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding NbConnectionsAfter}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Path />
                        </WrapPanel>
                    </Button>
                </StackPanel>
                <Button Style="{StaticResource RoundedButton}" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" BorderBrush="White" BorderThickness="2" Content="0" FontFamily="Marlett" FontSize="20" Width="30" Height="30" HorizontalAlignment="Right" Click="btnMin_Click" Margin="0,0,2,0" Padding="5,0" />
            </Grid>
            <Grid DockPanel.Dock="Bottom">
                <Expander Margin="0,5,0,0" Header="Advanced" SizeChanged="expand_SizeChanged" DockPanel.Dock="Bottom" x:Name="expand" IsExpanded="{Binding AlwaysShowDetails, Source={StaticResource WFN}}">
                    <Grid x:Name="gridExpand" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" DataContext="{Binding SelectedItem, ElementName=lstConnections}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <CheckBox Margin="3" Content="{Binding CurrentPath, FallbackValue='N/A'}" ContentStringFormat="Path: {0}" Grid.ColumnSpan="2" />
                        <CheckBox Margin="3" IsChecked="{Binding OptionsView.IsLocalPortChecked, ElementName=NotifWindow}" Grid.Row="1" Content="{Binding LocalPort, FallbackValue='N/A'}" ContentStringFormat="Local port: {0}" />
                        <CheckBox Margin="3" IsChecked="{Binding OptionsView.IsTargetPortChecked, ElementName=NotifWindow}" Grid.Row="2" Content="{Binding TargetPort, FallbackValue='N/A'}" ContentStringFormat="Target port: {0}" />
                        <CheckBox Margin="3" IsChecked="{Binding OptionsView.IsCurrentProfileChecked, ElementName=NotifWindow}" Grid.Row="3" Grid.ColumnSpan="2" Content="{Binding CurrentProfile, ElementName=NotifWindow, FallbackValue='unknown'}" ContentStringFormat="Create a rule for the current profile ({0}) only" />
                        <CheckBox Margin="3" IsChecked="{Binding OptionsView.IsTempRuleChecked, ElementName=NotifWindow}" Grid.Row="4" Grid.ColumnSpan="2" Content="Only apply this choice now and ask again the next time" />
                        <CheckBox Margin="3" IsChecked="{Binding OptionsView.IsServiceRuleChecked, ElementName=NotifWindow}" Grid.Row="1" Grid.Column="1" Content="{Binding CurrentService, FallbackValue='N/A'}" ContentStringFormat="Service: {0}" />
                        <CheckBox Margin="3" IsChecked="{Binding OptionsView.IsTargetIPChecked, ElementName=NotifWindow}" Grid.Row="2" Grid.Column="1" Content="{Binding Target, FallbackValue='N/A'}" ContentStringFormat="Target: {0}" />
                    </Grid>
                </Expander>
                <Button Style="{StaticResource RoundedButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="6" Margin="2" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" BorderThickness="0" Click="btnOptions_Click" Height="30" Width="30">
                    <Path Stretch="Uniform" Fill="BlueViolet" Data="F1 M 54.8392,24.4749C 55.3507,24.2457 55.8111,24.1311 56.2202,24.1311C 56.6172,24.1311 56.966,24.2232 57.2668,24.4073C 57.5675,24.5915 57.8171,24.8339 58.0156,25.1347L 58.4575,26.1536L 58.6017,27.2737C 58.6017,29.6143 58.4667,31.8014 58.1966,33.8351C 57.9266,35.8688 57.5522,37.7644 57.0734,39.5218C 56.5947,41.2793 56.0289,42.8997 55.3763,44.383C 54.7236,45.8663 54.0167,47.232 53.2556,48.4801C 52.4946,49.7281 51.6925,50.8636 50.8496,51.8866C 50.0067,52.9095 49.1556,53.8302 48.2963,54.6486C 45.2682,57.5252 41.8351,59.6285 37.9969,60.9583C 34.1505,59.6285 30.7174,57.5252 27.6976,54.6486C 26.4086,53.421 25.1463,51.9633 23.9105,50.2754C 22.6748,48.5875 21.5751,46.6244 20.6114,44.3861C 19.6478,42.1478 18.8713,39.616 18.2821,36.7905C 17.6929,33.965 17.3982,30.7928 17.3982,27.2737L 17.5609,26.1413L 18.0397,25.1439C 18.2504,24.8493 18.5123,24.613 18.8253,24.435C 19.1383,24.257 19.4933,24.168 19.8902,24.168C 20.2871,24.168 20.7106,24.2703 21.1608,24.4749C 22.196,24.9495 23.1484,25.2851 24.0179,25.4815C 24.8875,25.6779 25.6925,25.7761 26.4332,25.7761C 27.4193,25.7761 28.3052,25.6298 29.0909,25.3372C 29.8765,25.0447 30.5987,24.6743 31.2575,24.2263L 33.0805,22.787L 34.7009,21.3476L 36.2906,20.2336C 36.8266,19.939 37.3954,19.7917 37.9969,19.7917C 38.6107,19.7917 39.1866,19.939 39.7247,20.2336L 41.3175,21.3476L 42.9471,22.787L 44.7701,24.2263C 45.4227,24.6743 46.1419,25.0447 46.9275,25.3372C 47.7132,25.6298 48.5991,25.7761 49.5852,25.7761C 50.3258,25.7761 51.1279,25.6779 51.9913,25.4815C 52.8546,25.2851 53.804,24.9495 54.8392,24.4749 Z"  />
                </Button>
            </Grid>

            <StackPanel x:Name="gridConnections">
                <ListView VirtualizingPanel.ScrollUnit="Item" SelectedIndex="0" SelectionMode="Single" x:Name="lstConnections" Background="Transparent" ItemsSource="{Binding Connections}" DataContext="{x:Static Application.Current}" d:DataContext="{d:DesignInstance Type=sampleApp:AppDataSample, IsDesignTimeCreatable=True}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard Duration="0:0:1" SpeedRatio="2">
                                                <!--<ThicknessAnimation From="100,0,0,0" To="0,0,0,0" Storyboard.TargetProperty="Margin" />-->
                                                <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="{Binding ActualWidth,ElementName=gridConnections}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Margin="2" Grid.Column="0" Height="24" MinWidth="24" Source="{Binding Icon}" />
                                <TextBlock Margin="5" Grid.Column="1" Text="{Binding CurrentProd}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
                                <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="5,0" HorizontalAlignment="Right" Text="{Binding TentativesCounter,StringFormat='Attempts: {0}'}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <UniformGrid Rows="1" Columns="3">
                    <UniformGrid.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Margin" Value="2" />
                            <Setter Property="Padding" Value="4" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="20" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </UniformGrid.Resources>
                    <Button Click="btnAllow_Click" ToolTip="{Binding Source={x:Static WFN:Resources.MSG_ALLOW}}" HorizontalContentAlignment="Center">
                        <WrapPanel>
                            <Path Height="18" Stretch="Uniform" Fill="#FF4AAA4A" Data="F1 M 32.222,33.4875L 39.1886,40.0582L 51.3802,26.1251L 54.7052,29.0542L 39.5845,47.5L 28.897,36.8125L 32.222,33.4875 Z M 24,27L 48.5,27L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 49,38.75L 49,52L 24,52L 24,27 Z" />
                            <Label Content="{Binding Source={x:Static WFN:Resources.FW_RULE_ALLOW}}" VerticalContentAlignment="Center" />
                        </WrapPanel>
                    </Button>
                    <Button Click="btnIgnore_Click" ToolTip="{Binding Source={x:Static WFN:Resources.MSG_BLOCK}}" HorizontalContentAlignment="Center">
                        <WrapPanel>
                            <Path Height="20" Stretch="Uniform" Fill="#FFDE6032" Data="F1 M 31.6667,19L 44.3333,19L 57,31.6667L 57,44.3333L 44.3333,57L 31.6667,57L 19,44.3333L 19,31.6667L 31.6667,19 Z M 26.4762,45.0454L 30.9546,49.5238L 38,42.4783L 45.0454,49.5238L 49.5237,45.0454L 42.4783,38L 49.5238,30.9546L 45.0454,26.4763L 38,33.5217L 30.9546,26.4762L 26.4762,30.9546L 33.5217,38L 26.4762,45.0454 Z"/>
                            <Label Content="{Binding Source={x:Static WFN:Resources.FW_RULE_BLOCK}}" VerticalContentAlignment="Center" />
                        </WrapPanel>
                    </Button>
                    <Button Click="btnSkipAll_Click" HorizontalContentAlignment="Center">
                        <WrapPanel>
                            <Path Height="18" Stretch="Uniform" Data="M3,8H5V16H3V8M7,8H9V16H7V8M11,8H13V16H11V8M15,19.25V4.75L22.25,12L15,19.25Z" Fill="#FF599CEC" />
                            <Label Content="Skip all" VerticalContentAlignment="Center" />
                        </WrapPanel>
                    </Button>
                </UniformGrid>
            </StackPanel>
        </DockPanel>
    </Border>
</Window>
